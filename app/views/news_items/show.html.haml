%div.news_item
  %div
    - if !current_user.upvoted?(@news_item)
      = link_to_remote(image_tag("thumbs_up.png", :class => 'arrow_up'), :url => news_item_upvote_url(@news_item), :success => "$(this).remove();", :failure => "alert('there was an error processing the request, please try again later');")
    - if !@news_item.url.blank?
      = link_to(@news_item.title, @news_item.url)
      %span.grey_text
        (#{URI.parse(@news_item.url).host})
    - else
      = @news_item.title
    - if !@news_item.text.blank?
      = @news_item.text
  %div.news_item_sub.grey_text
    has #{@news_item.score.to_s + pluralize(@news_item.score, "point")} | posted by #{link_to(current_user.name, current_user)} at #{@news_item.created_at.utc.strftime("%H:%M")} UTC on #{@news_item.created_at.strftime("%m/%d/%y")} | #{link_to("discuss (#{@news_item.comments.count})", news_item_path(@news_item))}
  
  %br
  %br
  
  %div.news_item_comments
    = simple_form_for @comment do |f|
      = f.hidden_field :news_item_id, :value => @news_item.id
      = f.hidden_field :user_id, :value => current_user.id
      %p
        = f.text_area :text
      = f.button :submit, 'Add Comment'
    
    - @news_item.top_level_comments.each do |c|
      = render :partial => 'comments/show_iterate_down.html', :locals => { :comment => c }

